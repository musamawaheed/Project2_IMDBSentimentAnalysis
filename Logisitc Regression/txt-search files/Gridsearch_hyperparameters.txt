train_length = 10000
train_size=0.75, test_size=0.25

Best parameters set found on development set:

{'C': 0.1, 'penalty': 'l2', 'solver': 'liblinear'}

Grid scores on development set:

0.514 (+/-0.019) for {'C': 0.001, 'penalty': 'l1', 'solver': 'liblinear'}
0.515 (+/-0.022) for {'C': 0.001, 'penalty': 'l1', 'solver': 'saga'}
0.805 (+/-0.015) for {'C': 0.001, 'penalty': 'l2', 'solver': 'liblinear'}
0.803 (+/-0.016) for {'C': 0.001, 'penalty': 'l2', 'solver': 'saga'}
0.745 (+/-0.030) for {'C': 0.01, 'penalty': 'l1', 'solver': 'liblinear'}
0.741 (+/-0.032) for {'C': 0.01, 'penalty': 'l1', 'solver': 'saga'}
0.855 (+/-0.020) for {'C': 0.01, 'penalty': 'l2', 'solver': 'liblinear'}
0.834 (+/-0.028) for {'C': 0.01, 'penalty': 'l2', 'solver': 'saga'}
0.843 (+/-0.022) for {'C': 0.1, 'penalty': 'l1', 'solver': 'liblinear'}
0.816 (+/-0.031) for {'C': 0.1, 'penalty': 'l1', 'solver': 'saga'}
0.867 (+/-0.018) for {'C': 0.1, 'penalty': 'l2', 'solver': 'liblinear'}
0.835 (+/-0.030) for {'C': 0.1, 'penalty': 'l2', 'solver': 'saga'}
0.851 (+/-0.020) for {'C': 1, 'penalty': 'l1', 'solver': 'liblinear'}
0.832 (+/-0.029) for {'C': 1, 'penalty': 'l1', 'solver': 'saga'}
0.862 (+/-0.023) for {'C': 1, 'penalty': 'l2', 'solver': 'liblinear'}
0.836 (+/-0.030) for {'C': 1, 'penalty': 'l2', 'solver': 'saga'}
0.836 (+/-0.027) for {'C': 10, 'penalty': 'l1', 'solver': 'liblinear'}
0.835 (+/-0.030) for {'C': 10, 'penalty': 'l1', 'solver': 'saga'}
0.857 (+/-0.024) for {'C': 10, 'penalty': 'l2', 'solver': 'liblinear'}
0.835 (+/-0.030) for {'C': 10, 'penalty': 'l2', 'solver': 'saga'}
0.839 (+/-0.017) for {'C': 100, 'penalty': 'l1', 'solver': 'liblinear'}
0.834 (+/-0.030) for {'C': 100, 'penalty': 'l1', 'solver': 'saga'}
0.854 (+/-0.021) for {'C': 100, 'penalty': 'l2', 'solver': 'liblinear'}
0.835 (+/-0.030) for {'C': 100, 'penalty': 'l2', 'solver': 'saga'}
0.858 (+/-0.025) for {'C': 1000, 'penalty': 'l1', 'solver': 'liblinear'}
0.835 (+/-0.030) for {'C': 1000, 'penalty': 'l1', 'solver': 'saga'}
0.843 (+/-0.015) for {'C': 1000, 'penalty': 'l2', 'solver': 'liblinear'}
0.835 (+/-0.029) for {'C': 1000, 'penalty': 'l2', 'solver': 'saga'}
[Finished in 964.1s]

Best parameters set found on development set:

{'C': 0.1, 'penalty': 'l2', 'solver': 'lbfgs'}

Grid scores on development set:

0.805 (+/-0.018) for {'C': 0.001, 'penalty': 'l2', 'solver': 'newton-cg'}
0.805 (+/-0.018) for {'C': 0.001, 'penalty': 'l2', 'solver': 'lbfgs'}
0.805 (+/-0.018) for {'C': 0.001, 'penalty': 'l2', 'solver': 'liblinear'}
0.805 (+/-0.019) for {'C': 0.001, 'penalty': 'l2', 'solver': 'sag'}
0.804 (+/-0.021) for {'C': 0.001, 'penalty': 'l2', 'solver': 'saga'}
0.853 (+/-0.012) for {'C': 0.01, 'penalty': 'l2', 'solver': 'newton-cg'}
0.854 (+/-0.012) for {'C': 0.01, 'penalty': 'l2', 'solver': 'lbfgs'}
0.854 (+/-0.013) for {'C': 0.01, 'penalty': 'l2', 'solver': 'liblinear'}
0.842 (+/-0.014) for {'C': 0.01, 'penalty': 'l2', 'solver': 'sag'}
0.832 (+/-0.016) for {'C': 0.01, 'penalty': 'l2', 'solver': 'saga'}
0.864 (+/-0.008) for {'C': 0.1, 'penalty': 'l2', 'solver': 'newton-cg'}
0.865 (+/-0.007) for {'C': 0.1, 'penalty': 'l2', 'solver': 'lbfgs'}
0.864 (+/-0.008) for {'C': 0.1, 'penalty': 'l2', 'solver': 'liblinear'}
0.845 (+/-0.018) for {'C': 0.1, 'penalty': 'l2', 'solver': 'sag'}
0.835 (+/-0.015) for {'C': 0.1, 'penalty': 'l2', 'solver': 'saga'}
0.858 (+/-0.009) for {'C': 1, 'penalty': 'l2', 'solver': 'newton-cg'}
0.859 (+/-0.008) for {'C': 1, 'penalty': 'l2', 'solver': 'lbfgs'}
0.858 (+/-0.009) for {'C': 1, 'penalty': 'l2', 'solver': 'liblinear'}
0.845 (+/-0.017) for {'C': 1, 'penalty': 'l2', 'solver': 'sag'}
0.835 (+/-0.014) for {'C': 1, 'penalty': 'l2', 'solver': 'saga'}
0.855 (+/-0.006) for {'C': 10, 'penalty': 'l2', 'solver': 'newton-cg'}
0.859 (+/-0.007) for {'C': 10, 'penalty': 'l2', 'solver': 'lbfgs'}
0.855 (+/-0.005) for {'C': 10, 'penalty': 'l2', 'solver': 'liblinear'}
0.845 (+/-0.017) for {'C': 10, 'penalty': 'l2', 'solver': 'sag'}
0.834 (+/-0.015) for {'C': 10, 'penalty': 'l2', 'solver': 'saga'}
0.853 (+/-0.009) for {'C': 100, 'penalty': 'l2', 'solver': 'newton-cg'}
0.855 (+/-0.008) for {'C': 100, 'penalty': 'l2', 'solver': 'lbfgs'}
0.852 (+/-0.009) for {'C': 100, 'penalty': 'l2', 'solver': 'liblinear'}
0.845 (+/-0.017) for {'C': 100, 'penalty': 'l2', 'solver': 'sag'}
0.835 (+/-0.014) for {'C': 100, 'penalty': 'l2', 'solver': 'saga'}
0.851 (+/-0.011) for {'C': 1000, 'penalty': 'l2', 'solver': 'newton-cg'}
0.855 (+/-0.004) for {'C': 1000, 'penalty': 'l2', 'solver': 'lbfgs'}
0.841 (+/-0.016) for {'C': 1000, 'penalty': 'l2', 'solver': 'liblinear'}
0.846 (+/-0.017) for {'C': 1000, 'penalty': 'l2', 'solver': 'sag'}
0.835 (+/-0.015) for {'C': 1000, 'penalty': 'l2', 'solver': 'saga'}
[Finished in 172.0s]


Best parameters set found on development set:

{'logreg__C': 30, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'} 0.90665

Grid scores on development set:

0.905 (+/-0.016) for {'logreg__C': 18, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.016) for {'logreg__C': 18, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.013) for {'logreg__C': 18, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.012) for {'logreg__C': 18, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.907 (+/-0.013) for {'logreg__C': 18, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.907 (+/-0.013) for {'logreg__C': 18, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.009) for {'logreg__C': 18, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.904 (+/-0.009) for {'logreg__C': 18, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.016) for {'logreg__C': 22, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.016) for {'logreg__C': 22, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.907 (+/-0.013) for {'logreg__C': 22, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.012) for {'logreg__C': 22, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.013) for {'logreg__C': 22, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.907 (+/-0.013) for {'logreg__C': 22, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.009) for {'logreg__C': 22, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.904 (+/-0.010) for {'logreg__C': 22, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.016) for {'logreg__C': 26, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.016) for {'logreg__C': 26, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.014) for {'logreg__C': 26, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.013) for {'logreg__C': 26, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.013) for {'logreg__C': 26, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.013) for {'logreg__C': 26, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.009) for {'logreg__C': 26, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.904 (+/-0.010) for {'logreg__C': 26, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.016) for {'logreg__C': 30, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.016) for {'logreg__C': 30, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.013) for {'logreg__C': 30, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.013) for {'logreg__C': 30, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.013) for {'logreg__C': 30, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.907 (+/-0.013) for {'logreg__C': 30, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.009) for {'logreg__C': 30, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.904 (+/-0.009) for {'logreg__C': 30, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.016) for {'logreg__C': 34, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.016) for {'logreg__C': 34, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.014) for {'logreg__C': 34, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.014) for {'logreg__C': 34, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 2), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.906 (+/-0.013) for {'logreg__C': 34, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.907 (+/-0.013) for {'logreg__C': 34, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': ['br', 'in', 'of', 'at', 'a', 'the', 'an', 'is', 'that', 'this', 'to', 'for'], 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
0.905 (+/-0.009) for {'logreg__C': 34, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'unicode', 'tfidf__token_pattern': '\\w{1,}'}
0.904 (+/-0.009) for {'logreg__C': 34, 'logreg__solver': 'liblinear', 'tfidf__max_features': 100000, 'tfidf__ngram_range': (1, 3), 'tfidf__stop_words': None, 'tfidf__strip_accents': 'ascii', 'tfidf__token_pattern': '\\w{1,}'}
[Finished in 1080.8s]